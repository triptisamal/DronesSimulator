# Import libraries
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Creating dataset
np.random.seed(10)
data1 = (
55 ,
162 ,
172 ,
56 ,
185 ,
0 ,
76 ,
150 ,
75 ,
49 ,
182 ,
58 ,
159 ,
116 ,
176 ,
28 ,
135 ,
0 ,
145 ,
133 ,
160 ,
150 ,
125 ,
141 ,
186 ,
81 ,
188 ,
144 ,
136 ,
0 ,
183 ,
139 ,
61 ,
20 ,
91 ,
178 ,
149 ,
0 ,
40 ,
0 ,
124 ,
126 ,
146 ,
53 ,
0 ,
121 ,
141 ,
128 ,
172 ,
183 ,
64 ,
0 ,
78 ,
116 ,
188 ,
40 ,
161 ,
46 ,
108 ,
96 ,
169 ,
162 ,
49 ,
72 ,
172 ,
205 ,
100 ,
144 ,
98 ,
92 ,
118 ,
19 ,
43 ,
34 ,
152 ,
187 ,
30 ,
173 ,
0 ,
151 ,
107 ,
127 ,
42 ,
127 ,
80 ,
36 ,
128 ,
96 ,
165 ,
156 ,
145 ,
81 ,
55 ,
141 ,
185 ,
0 ,
144 ,
168 ,
192 ,
132 ,
153 ,
180 ,
142 ,
18 ,
0 ,
177 ,
120 ,
117 ,
13 ,
142 ,
153 ,
62 ,
208 ,
75 ,
146 ,
164 ,
0 ,
159 ,
110 ,
47 ,
112 ,
196 ,
0 ,
119 ,
39 ,
106 ,
167 ,
144 ,
195 ,
100 ,
35 ,
185 ,
71 ,
196 ,
159 ,
147 ,
0 ,
97 ,
64 ,
164 ,
127 ,
92 ,
66 ,
127 ,
137 ,
179 ,
183 ,
82 ,
59 ,
190 ,
187 ,
85 ,
152 ,
47 ,
141 ,
77 ,
62 ,
181 ,
129 ,
139 ,
129 ,
171 ,
116 ,
53 ,
194 ,
79 ,
156 ,
202 ,
52 ,
10 ,
166 ,
101 ,
125 ,
20 ,
115 ,
101 ,
92 ,
0 ,
139 ,
72 ,
127 ,
163 ,
0 ,
52 ,
14 ,
75 ,
0 ,
151 ,
168 ,
0 ,
0 ,
177 ,
108 ,
136 ,
69 ,
165 ,
90 ,
151 ,
81 ,
133 ,
204 ,
119 ,
72 ,
167 ,
141 ,
135 ,
61 ,
139 ,
80 ,
48 ,
78 ,
0 ,
159 ,
47 ,
141 ,
54 ,
101 ,
179 ,
177 ,
62 ,
185 ,
39 ,
211 ,
169 ,
106 ,
130 ,
44 ,
75 ,
127 ,
183 ,
29 ,
45 ,
201 ,
45 ,
0 ,
40 ,
0 ,
51 ,
151 ,
59 ,
119 ,
144 ,
117 ,
19 ,
126 ,
134 ,
157 ,
118 ,
139 ,
147 ,
134 ,
21 ,
181 ,
128 ,
100 ,
157 ,
174 ,
121 ,
184 ,
54 ,
153 ,
134 ,
0 ,
180 ,
191 ,
128 ,
150 ,
104 ,
61 ,
0 ,
23 ,
52 ,
205 ,
0 ,
0 ,
168 ,
0 ,
112 ,
83 ,
157 ,
148 ,
49 ,
185 ,
109 ,
62 ,
115 ,
179 ,
72 ,
0 ,
55 ,
61 ,
93 ,
0 ,
54 ,
0 ,
34 ,
183 ,
172 ,
108 ,
73 ,
189 ,
50 ,
92 ,
136 ,
173 ,
145 ,
94 ,
47 ,
159 ,
211 ,
28 ,
0 ,
102 ,
113 ,
158 ,
104 ,
166 ,
166 ,
85 ,
160 ,
114 ,
58 ,
85 ,
125 ,
201 ,
0 ,
49 ,
94 ,
15 ,
155 ,
82 ,
131 ,
69 ,
135 ,
78 ,
96 ,
188 ,
132 ,
204 ,
68 ,
133 ,
60 ,
136 ,
171 ,
120 ,
0 ,
34 ,
149 ,
79 ,
118 ,
98 ,
167 ,
118 ,
156 ,
98 ,
0 ,
0 ,
78 ,
49 ,
105 ,
97 ,
36 ,
149 ,
39 ,
89 ,
121 ,
25 ,
116 ,
36 ,
113 ,
168 ,
164 ,
114 ,
186 ,
171 ,
0 ,
183 ,
106 ,
48 ,
168 ,
0 ,
0 ,
156 ,
190 ,
124 ,
0 ,
0 ,
87 ,
92 ,
206 ,
169 ,
170 ,
155 ,
65 ,
18 ,
104 ,
204 ,
102 ,
51 ,
0 ,
0 ,
167 ,
0 ,
187 ,
103 ,
150 ,
21 ,
133 ,
199 ,
109 ,
115 ,
162 ,
173 ,
201 ,
94 ,
0 ,
130 ,
124 ,
155 ,
74 ,
66 ,
205 ,
186 ,
71 ,
12 ,
146 ,
70 ,
199 ,
145 ,
111 ,
122 ,
198 ,
134 ,
145 ,
176 ,
163 ,
187 ,
24 ,
79 ,
114 ,
34 ,
92 ,
73 ,
42 ,
52 ,
35 ,
0 ,
142 ,
151 ,
0 ,
208 ,
0 ,
163 ,
90 ,
132 ,
93 ,
0 ,
50 ,
184 ,
19 ,
0 ,
104 ,
176 ,
207 ,
158 ,
107 ,
91 ,
107 ,
119 ,
184 ,
76 ,
148 ,
67 ,
0 ,
194 ,
86 ,
36 ,
83 ,
0 ,
0 ,
195 ,
0 ,
43 ,
95 ,
25 ,
143 ,
76 ,
141 ,
135 ,
150 ,
131 ,
76 ,
95 ,
159 ,
174 ,
167 ,
91 ,
0 ,
129 ,
173)


arr1=np.array(data1)
# finding the 1st quartile
q1 = np.quantile(arr1, 0.25)
# finding the 3rd quartile
q3 = np.quantile(arr1, 0.75)
med = np.median(arr1)
# finding the iqr region
iqr = q3-q1
# finding upper and lower whiskers
upper_bound = q3+(1.5*iqr)
lower_bound = q1-(1.5*iqr)
print(iqr, upper_bound, lower_bound)


outliers = arr1[(arr1 <= lower_bound) | (arr1 >= upper_bound)]
print('The following are the outliers in the boxplot:',format(outliers))


data2 = (
0 ,
94 ,
225 ,
78 ,
332 ,
68 ,
0 ,
227 ,
65 ,
168 ,
197 ,
77 ,
276 ,
0 ,
127 ,
0 ,
43 ,
43 ,
0 ,
253 ,
0 ,
172 ,
113 ,
0 ,
150 ,
121 ,
139 ,
0 ,
159 ,
0 ,
134 ,
59 ,
153 ,
74 ,
0 ,
109 ,
120 ,
175 ,
0 ,
100 ,
123 ,
132 ,
223 ,
8 ,
68 ,
0 ,
86 ,
200 ,
304 ,
149 ,
74 ,
256 ,
0 ,
103 ,
0 ,
160 ,
112 ,
0 ,
228 ,
261 ,
206 ,
0 ,
151 ,
220 ,
0 ,
171 ,
167 ,
0 ,
147 ,
228 ,
154 ,
87 ,
0 ,
0 ,
283 ,
86 ,
0 ,
227 ,
0 ,
13 ,
323 ,
198 ,
217 ,
282 ,
189 ,
185 ,
56 ,
192 ,
72 ,
0 ,
107 ,
210 ,
67 ,
152 ,
205 ,
183 ,
73 ,
187 ,
78 ,
0 ,
0 ,
226 ,
224 ,
69 ,
157 ,
0 ,
0 ,
68 ,
285 ,
59 ,
0 ,
211 ,
0 ,
198 ,
164 ,
80 ,
0 ,
172 ,
215 ,
230 ,
261 ,
111 ,
122 ,
0 ,
284 ,
166 ,
103 ,
0 ,
48 ,
63 ,
51 ,
186 ,
47 ,
183 ,
143 ,
0 ,
248 ,
190 ,
0 ,
0 ,
267 ,
255 ,
81 ,
0 ,
122 ,
182 ,
162 ,
229 ,
0 ,
0 ,
235 ,
285 ,
175 ,
202 ,
253 ,
30 ,
136 ,
315 ,
245 ,
108 ,
145 ,
205 ,
88 ,
0 ,
311 ,
0 ,
184 ,
0 ,
36 ,
178 ,
195 ,
93 ,
102 ,
31 ,
92 ,
118 ,
200 ,
302 ,
94 ,
0 ,
0 ,
108 ,
289 ,
43 ,
172 ,
42 ,
173 ,
102 ,
153 ,
76 ,
51 ,
194 ,
183 ,
130 ,
69 ,
97 ,
62 ,
222 ,
63 ,
156 ,
192 ,
86 ,
309 ,
109 ,
199 ,
179 ,
122 ,
254 ,
49 ,
246 ,
0 ,
121 ,
193 ,
223 ,
138 ,
10 ,
137 ,
150 ,
0 ,
159 ,
212 ,
34 ,
250 ,
154 ,
257 ,
70 ,
254 ,
71 ,
39 ,
228 ,
117 ,
86 ,
248 ,
0 ,
109 ,
132 ,
136 ,
134 ,
298 ,
191 ,
154 ,
160 ,
174 ,
53 ,
0 ,
223 ,
0 ,
172 ,
68 ,
110 ,
93 ,
0 ,
16 ,
191 ,
226 ,
114 ,
144 ,
0 ,
37 ,
60 ,
0 ,
285 ,
264 ,
125 ,
152 ,
265 ,
0 ,
237 ,
188 ,
333 ,
77 ,
3 ,
78 ,
45 ,
104 ,
96 ,
0 ,
249 ,
173 ,
261 ,
91 ,
258 ,
144 ,
127 ,
0 ,
140 ,
99 ,
147 ,
147 ,
0 ,
202 ,
0 ,
57 ,
0 ,
247 ,
166 ,
0 ,
0 ,
142 ,
179 ,
163 ,
175 ,
151 ,
146 ,
0 ,
0 ,
81 ,
229 ,
0 ,
142 ,
228 ,
171 ,
95 ,
0 ,
86 ,
0 ,
178 ,
0 ,
0 ,
125 ,
0 ,
155 ,
163 ,
199 ,
177 ,
217 ,
129 ,
0 ,
54 ,
0 ,
186 ,
21 ,
194 ,
224 ,
183 ,
253 ,
273 ,
76 ,
0 ,
0 ,
0 ,
0 ,
0 ,
155 ,
154 ,
216 ,
36 ,
43 ,
94 ,
44 ,
173 ,
0 ,
177 ,
290 ,
77 ,
123 ,
263 ,
163 ,
204 ,
0 ,
169 ,
73 ,
0 ,
277 ,
0 ,
0 ,
89 ,
266 ,
16 ,
0 ,
262 ,
0 ,
206 ,
0 ,
125 ,
0 ,
107 ,
162 ,
198 ,
78 ,
80 ,
84 ,
0 ,
287 ,
0 ,
0 ,
138 ,
302 ,
200 ,
0 ,
160 ,
126 ,
187 ,
0 ,
101 ,
0 ,
62 ,
92 ,
236 ,
0 ,
0 ,
0 ,
32 ,
180 ,
14 ,
124 ,
57 ,
25 ,
322 ,
97 ,
121 ,
225 ,
169 ,
204 ,
0 ,
62 ,
0 ,
0 ,
206 ,
0 ,
220 ,
79 ,
176 ,
325 ,
103 ,
187 ,
0 ,
0 ,
143 ,
68 ,
143 ,
0 ,
155 ,
139 ,
36 ,
0 ,
206 ,
265 ,
0 ,
0 ,
307 ,
72 ,
124 ,
167 ,
23 ,
0 ,
135 ,
217 ,
193 ,
150 ,
252 ,
40 ,
27 ,
147 ,
309 ,
79 ,
138 ,
91 ,
132 ,
159 ,
0 ,
18 ,
46 ,
0 ,
223 ,
190 ,
0 ,
219 ,
24 ,
143 ,
34 ,
153 ,
236 ,
0 ,
27 ,
20 ,
158 ,
0 ,
80 ,
230 ,
179 ,
14 ,
162 ,
58 ,
145 ,
0 ,
233 ,
162 ,
126 ,
195 ,
127 ,
98 ,
201 ,
123 ,
0 ,
144 ,
64 ,
138 ,
0, 
179 )


arr2=np.array(data2)
# finding the 1st quartile
q1 = np.quantile(arr2, 0.25)
# finding the 3rd quartile
q3 = np.quantile(arr2, 0.75)
med = np.median(arr2)
# finding the iqr region
iqr = q3-q1
# finding upper and lower whiskers
upper_bound = q3+(1.5*iqr)
lower_bound = q1-(1.5*iqr)
print(iqr, upper_bound, lower_bound)


outliers2 = arr2[(arr2 <= lower_bound) | (arr2 >= upper_bound)]
print('The following are the outliers in the boxplot:',format(outliers2))
data = np.array([arr1,arr2]) 
data = data.transpose()
df = pd.DataFrame(data, columns = ['216','343'])
#print(df)
plt.figure(figsize=(12, 7))
plt.title('Topology = Cubic Lattice',fontsize=16)
plt.suptitle('Distribution of Total Number of Transmissions',fontsize=24, y=1)
plt.xlabel("Number of Nodes")
plt.ylabel("Total Number of Transmissions")
df.boxplot()
plt.show()


